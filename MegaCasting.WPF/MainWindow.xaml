<Controls:MetroWindow x:Class="MegaCasting.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
       
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:pu="clr-namespace:Panuon.UI.Silver;assembly=Panuon.UI.Silver" 
        xmlns:view="clr-namespace:MegaCasting.WPF.View"
        Title="Bienvenu à la gestion de MegaCasting"
        Height="850" Width="1400" AllowsTransparency="True" Background="Transparent" WindowStyle="None" ResizeMode="NoResize" 
        WindowStartupLocation="CenterScreen" Visibility="Visible" MouseDown="WindowX_MouseDown">


    <Window.Resources>
        <Storyboard x:Key="CloseMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="GridMenu">
                <!--Dans le groupe d'éléments Transform qu'on a défini, on prend l'élément N3, et changer la valeur sur l'axe X de 300 à 0.-->
                <!--dans ce cas là, la Grid part de sa postition initiale de 0 à -300, la Grid se trouvera à l'intérieur de la MainWindow-->
                <EasingDoubleKeyFrame KeyTime="0" Value="300"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridBackground">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="GridMenu">
                <!--Dans le groupe d'éléments Transform qu'on a défini, on prend l'élément N3, et changer la valeur sur l'axe X de 0 à 300.-->
                <!--dans ce cas là, la Grid part de sa postition initiale de -300 à 0, la Grid se trouvera à l'intérieur de la MainWindow-->
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="300"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridBackground">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonClose">
            <BeginStoryboard x:Name="CloseMenu_BeginStoryboard" Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Btn_ViewMain">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Btn_ViewContrat">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Btn_ViewTypeContrat">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Btn_ViewOffre">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Btn_ViewOffreInternaute">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Btn_ViewInternaute">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Btn_ViewMetier">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Btn_ViewDomaineMetier">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Btn_ViewStudio">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Btn_ViewPartenaire">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Btn_ViewEmploye">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="Btn_ViewGroupe">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonOpen">
            <BeginStoryboard Storyboard="{StaticResource OpenMenu}"/>
        </EventTrigger>
    </Window.Triggers>


    <Grid >
        <Grid Name="BackgroundColorLayer">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="7.5*"/>
            </Grid.ColumnDefinitions>
            <Border CornerRadius="0" Grid.ColumnSpan="2">
                <Border.Background>
                    <LinearGradientBrush>
                        <GradientStop Color="Coral" Offset="0.0"/>
                        <GradientStop Color="Crimson" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
        </Grid>
        <!--TopLayer est superposé en BackgroundColorLayer-->
        <Grid Name="TopLayer">


            <Grid Grid.Column="1" x:Name="GridBackground">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="10*"/>

                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="100,0,0,0">
                    <materialDesign:PackIcon Kind="Videocam" Foreground="White" Width="75" Height="75"  VerticalAlignment="Center"  HorizontalAlignment="Left"/>
                    <Label  Content="MegaCasting" Foreground="White" FontFamily="Helvitica" FontSize="60" FontWeight="Light" VerticalAlignment="Center"/>
                    <TextBlock Text="Opérateur:" Foreground="White" FontFamily="Helvitica" FontSize="30" FontWeight="Light" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        <Label x:Name="_Label_Emp"  Foreground="White" FontFamily="Helvitica" FontSize="30" FontWeight="Light" VerticalAlignment="Center"  />
                    <Button Margin="520,0,0,0" x:Name="Btn_Close" Click="Btn_Close_Click" BorderThickness="0" Background="Transparent">
                        <materialDesign:PackIcon Grid.Column="2" Kind="ExitToApp" Foreground="White" Width="50" Height="50"  VerticalAlignment="Center"  HorizontalAlignment="Center" />
                    </Button>
                </StackPanel>
                <DockPanel x:Name="DockPanelView" Grid.Row="1"  >
                    <view:ViewMain></view:ViewMain>
                </DockPanel>
            </Grid>
            <Grid Grid.Column="0">
                <Button x:Name="ButtonOpen" HorizontalAlignment="Left" VerticalAlignment="Top" Background="Transparent" BorderBrush="{x:Null}" Width="70" Height="70" Padding="0">
                    <materialDesign:PackIcon Kind="Menu" Foreground="White" Width="70" Height="70"/>
                </Button>
            </Grid>
            <Grid Grid.Column="0" Name="GridMenu" Width="300" HorizontalAlignment="Left" Margin="-300 0 0 0" Background="Coral" RenderTransformOrigin="0.5,0.5">
                <!--la grid qui contient le menu et la barre d'indication se trouve à l'extérier grâce à la valaur valeur left 300-->
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <!--0-->
                        <SkewTransform/>
                        <!--1-->
                        <RotateTransform/>
                        <!--2-->
                        <TranslateTransform/>
                        <!--3-->
                    </TransformGroup>
                </Grid.RenderTransform>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.1*"/>
                    <ColumnDefinition/>

                </Grid.ColumnDefinitions>

                <Rectangle Grid.Column="0" Grid.Row="1" Fill="AliceBlue" Height="{Binding ElementName=MenuListBox, Path=ActualHeight}" Name="PointerRail"/>
                <Rectangle Grid.Column="0" Grid.Row="1" Fill="DarkRed" Height="60" VerticalAlignment="Top" Name="Pointer">
                    <!--la barre rouge est superposée sur la barre grise-->
                    <Rectangle.RenderTransform>
                        <TranslateTransform x:Name="PointOffset"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle Grid.Row="1"/>

                <ListBox Grid.Row="1" Grid.Column="1" Name="MenuListBox" >

                    <ListBox.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Button Content="click"  Margin="0,2" Width="50" Height="25" Click="Button_Click"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">

                            <EventSetter Event="MouseEnter" Handler="ListBoxItem_MouseEnter"/>


                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <StackPanel Height="60" Style="{StaticResource StackPanelStyle}"  Name="MenuContainer">
                                            <Rectangle Fill="DarkRed" VerticalAlignment="Stretch" Width="10" Visibility="Visible" Name="LeftSideRectangle" />
                                            <ContentPresenter VerticalAlignment="Center" Margin="10,0,0,0" />

                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Visibility" Value="Visible" TargetName="LeftSideRectangle"/>
                                                <Setter Property="Background" Value="#FF382F2F" TargetName="MenuContainer"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Visibility" Value="Visible" TargetName="LeftSideRectangle"/>
                                                <Setter Property="Background" Value="#FFE4511A" TargetName="MenuContainer"/>

                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBoxItem x:Name="Cancel">

                        <Button x:Name="ButtonClose" HorizontalAlignment="Right" VerticalAlignment="Top" Background="Transparent" Foreground="White" BorderBrush="{x:Null}" Width="240" >

                            <StackPanel >
                                <materialDesign:PackIcon Kind="ArrowCollapseLeft" Width="50" Height="50" Margin="200,0,0,0"/>
                            </StackPanel>
                        </Button>

                    </ListBoxItem>
                    <ListBoxItem x:Name="ViewMain" Tag="ViewMain">
                        <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Width="240" x:Name="Btn_ViewMain" Click="Btn_ViewMain_Click">
                            <StackPanel Style="{StaticResource StackPanelStyle}" >
                                <iconPacks:PackIconFontAwesome Kind="HomeSolid" Width="30" Height="30" VerticalAlignment="Center" Foreground="White"/>
                                <TextBlock Text="Home" FontSize="30" FontWeight="Light" Foreground="White" />
                            </StackPanel>
                        </Button>
                    </ListBoxItem>
                    <ListBoxItem x:Name="ViewTypeContrat" Visibility="Collapsed">
                        <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Width="240" x:Name="Btn_ViewTypeContrat" Click="Btn_ViewTypeContrat_Click">
                            <StackPanel Style="{StaticResource StackPanelStyle}">
                                <iconPacks:PackIconMaterialDesign Kind="MergeType" Width="30" Height="30" VerticalAlignment="Center" Foreground="White"/>
                                <TextBlock Text="Type contrat" FontSize="30" FontWeight="Light" Foreground="White"/>
                            </StackPanel>
                        </Button>
                    </ListBoxItem>
                    <ListBoxItem x:Name="ViewContrat" >
                        <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Width="240" x:Name="Btn_ViewContrat" Click="Btn_ViewContrat_Click">
                            <StackPanel Style="{StaticResource StackPanelStyle}">
                                <iconPacks:PackIconMaterialDesign Kind="Book"  Width="30" Height="30" VerticalAlignment="Center" Foreground="White"/>
                                <TextBlock Text="Contrats" FontSize="30" FontWeight="Light" Foreground="White"/>
                            </StackPanel>
                        </Button>
                    </ListBoxItem>
                    <ListBoxItem x:Name="ViewOfrre">
                        <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Width="240" x:Name="Btn_ViewOffre" Click="Btn_ViewOffre_Click">
                            <StackPanel Style="{StaticResource StackPanelStyle}">
                                <iconPacks:PackIconFontAwesome Kind="GiftSolid"  Width="30" Height="30" VerticalAlignment="Center" Foreground="White"/>
                                <TextBlock Text="Offres" FontSize="30" FontWeight="Light" Foreground="White"/>
                            </StackPanel>
                        </Button>
                    </ListBoxItem>
                    <ListBoxItem x:Name="ViewOffreInternaute" Visibility="Collapsed" >
                        <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Width="240" x:Name="Btn_ViewOffreInternaute" Click="Btn_ViewOffreInternaute_Click">
                            <StackPanel Style="{StaticResource StackPanelStyle}">
                                <iconPacks:PackIconFontAwesome Kind="LinkSolid"  Width="30" Height="30" VerticalAlignment="Center" Foreground="White"/>
                                <TextBlock Text="Offre Internaute" FontSize="30" FontWeight="Light" Foreground="White"/>
                            </StackPanel>
                        </Button>
                    </ListBoxItem>
                    <ListBoxItem x:Name="ViewInternaute" Visibility="Collapsed" >
                        <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Width="240" x:Name="Btn_ViewInternaute" Click="Btn_ViewInternaute_Click">
                            <StackPanel Style="{StaticResource StackPanelStyle}">
                                <iconPacks:PackIconFontAwesome Kind="UserCheckSolid"  Width="30" Height="30" VerticalAlignment="Center" Foreground="White"/>
                                <TextBlock Text="Internautes" FontSize="30" FontWeight="Light" Foreground="White"/>
                            </StackPanel>
                        </Button>
                    </ListBoxItem>
                    <ListBoxItem x:Name="ViewMetier" >
                        <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Width="240" x:Name="Btn_ViewMetier" Click="Btn_ViewMetier_Click">
                            <StackPanel Style="{StaticResource StackPanelStyle}">
                                <iconPacks:PackIconFontAwesome Kind="JointSolid"  Width="30" Height="30" VerticalAlignment="Center" Foreground="White"/>
                                <TextBlock Text="Métiers" FontSize="30" FontWeight="Light" Foreground="White"/>
                            </StackPanel>
                        </Button>
                    </ListBoxItem>
                    <ListBoxItem x:Name="ViewDomaineMetier" >
                        <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Width="240" x:Name="Btn_ViewDomaineMetier" Click="Btn_ViewDomaineMetier_Click">
                            <StackPanel Style="{StaticResource StackPanelStyle}">
                                <iconPacks:PackIconFontAwesome Kind="PagelinesBrands"  Width="30" Height="30" VerticalAlignment="Center" Foreground="White"/>
                                <TextBlock Text="Domaines" FontSize="30" FontWeight="Light" Foreground="White"/>
                            </StackPanel>
                        </Button>
                    </ListBoxItem>
                    <ListBoxItem x:Name="ViewStudio">
                        <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Width="240" x:Name="Btn_ViewStudio" Click="Btn_ViewStudio_Click">
                            <StackPanel Style="{StaticResource StackPanelStyle}">
                                <iconPacks:PackIconFontAwesome Kind="FilmSolid"  Width="30" Height="30" VerticalAlignment="Center" Foreground="White"/>
                                <TextBlock Text="Studios" FontSize="30" FontWeight="Light" Foreground="White"/>
                            </StackPanel>
                        </Button>
                    </ListBoxItem>
                    <ListBoxItem x:Name="ViewPartenaire">
                        <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Width="240" x:Name="Btn_ViewPartenaire" Click="Btn_ViewPartenaire_Click" >
                            <StackPanel Style="{StaticResource StackPanelStyle}">
                                <iconPacks:PackIconFontAwesome Kind="HandHoldingHeartSolid"  Width="30" Height="30" VerticalAlignment="Center" Foreground="White"/>
                                <TextBlock Text="Partenaires" FontSize="30" FontWeight="Light" Foreground="White"/>
                            </StackPanel>
                        </Button>
                    </ListBoxItem>
                    <ListBoxItem x:Name="ViewEmploye" Visibility="Collapsed">
                        <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Width="240" x:Name="Btn_ViewEmploye" Click="Btn_ViewEmploye_Click">
                            <StackPanel Style="{StaticResource StackPanelStyle}">
                                <iconPacks:PackIconFontAwesome Kind="UserCircleSolid"  Width="30" Height="30" VerticalAlignment="Center" Foreground="White"/>
                                <TextBlock Text="Employés" FontSize="30" FontWeight="Light" Foreground="White"/>
                            </StackPanel>
                        </Button>
                    </ListBoxItem>
                    <ListBoxItem x:Name="ViewGroupe" Visibility="Collapsed" >
                        <Button BorderThickness="0" Background="Transparent" BorderBrush="Transparent" Width="240" x:Name="Btn_ViewGroupe" Click="Btn_ViewGroupe_Click">
                            <StackPanel Style="{StaticResource StackPanelStyle}">
                                <iconPacks:PackIconFontAwesome Kind="LayerGroupSolid"  Width="30" Height="30" VerticalAlignment="Center" Foreground="White"/>
                                <TextBlock Text="Groupes" FontSize="30" FontWeight="Light" Foreground="White"/>
                            </StackPanel>
                        </Button>
                    </ListBoxItem>

                </ListBox>

            </Grid>






        </Grid>
    </Grid>

    <!--<materialDesign:Card Padding="32" Margin="16" Grid.Column="2" Grid.Row="4">
        <TextBlock Style="{DynamicResource MaterialDesignTitleTextBlock}">YEAHHHHHHH</TextBlock>
    </materialDesign:Card>-->
</Controls:MetroWindow>
